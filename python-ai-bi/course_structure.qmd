---
title: "课程结构"
---

# 课程结构

本课程采用模块化设计，围绕数据分析和AI应用的完整流程组织内容，共分为六个核心模块和课程评估部分。

![课程模块结构](images/course_structure.svg)

## 模块化设计

:::{.important}
### 模块一：数据采集与预处理

掌握从各种数据源获取数据的方法，以及数据清洗和预处理的技能。

### 模块二：数据探索与可视化

学习探索性数据分析方法和数据可视化技术，从数据中发现洞见。

### 模块三：计量经济学模型与传统机器学习融合应用

理解并应用计量经济学模型和传统机器学习算法，并学习如何融合这两种方法。

### 模块四：简单深度学习入门与实践

了解深度学习基础知识，并学习如何构建和训练简单的深度学习模型。

### 模块五：大模型API调用与智能应用

学习大语言模型的原理和API调用方法，以及如何构建基于大模型的智能应用。

### 模块六：项目部署与工程实践（可选）

掌握模型部署和应用开发的工程实践知识。
:::

## 教学方式

本课程采用以下教学方式：

1. **理论讲解与案例分析结合**：每个模块先进行理论知识讲解，然后结合实际案例进行分析
2. **实践操作为主**：课程以实践操作为主，鼓励学生动手编写代码
3. **项目驱动学习**：围绕项目展开教学，让学生在完成项目的过程中学习和掌握知识
4. **小组合作学习**：鼓励学生进行小组合作，共同完成项目
5. **互动式教学**：鼓励学生积极参与课堂讨论，提问，分享学习心得

## 课程评估方式

:::{.example}
- **项目评分 (70%)**：综合性项目（期末大项目），个人项目
- **课堂参与 (30%)**：积极参与课堂讨论和提问
:::

## 课程时间分配

| 模块 | 内容 | 课时分配 |
|------|------|----------|
| 模块一 | 数据采集与预处理 | 2-4课时 |
| 模块二 | 数据探索与可视化 | 2-4课时 |
| 模块三 | 计量经济学模型与传统机器学习融合应用 | 2-4课时 |
| 模块四 | 简单深度学习入门与实践 | 2-4课时 |
| 模块五 | 大模型API调用与智能应用 | 2-4课时 |
| 模块六 | 项目部署与工程实践（可选） | 2-4课时 |
| 综合实践 | 项目指导与展示 | 2-4课时 |

## 推荐工具与环境

- **Python版本**：Python 3.9+（推荐最新稳定版本）
- **核心库**：Pandas, NumPy, Scikit-learn, Matplotlib, Seaborn, Plotly, Requests, Scrapy, Playwright, PyTorch (或 TensorFlow), Statsmodels, linearmodels, OpenAI Python库, LangChain
- **IDE/编辑器**：VS Code, Cursor

:::{.tip}
本课程推荐使用 VS Code 或 Cursor 作为集成开发环境，并安装 Python 和 AI 插件以便获得最佳的开发体验。VS Code 和 Cursor 都支持 Python 语言和 Jupyter Notebook，方便进行交互式编程和数据分析。
::: 